#include "../../../../../GameShared/GameClasses/System/Common/GtFSM.h"

class CBoCustomGameState : CGtState {
public:
	void Action(EGtStateAction, void *, void *, void *);
	bool AllGamesArrived(int, void *);
	void BootedGameMessageCallback(EBoPopupButton, void *);
	void BootedOutOfGame(ELobbyKickReason);
	void BootedOutOfUserSet(ELobbyKickReason);
	void BootedPartyMessageCallback(EBoPopupButton, void *);
	void ChangeTeams();
	void ClearAllocatedStrings();
	void CreateGame(const CBoGameOptions *);
	bool GameCallback(CGtLobbySearchResults *, void *);
	CBoCustomGameMatches* GetFoundGame(int);
	RwInt32 GetFreeSlotIndex();
	RwInt32 GetNumFoundGames();
	bool GoPlayMessageCallback(void *, int, void *);
	void GotoNextAction();
	void HandleMenuPageBack(EFlashMovie);
	void JoinGame(int);
	void LeaveGame(bool);
	void LeaveGamePrompt();
	void LeaveGamePromptMessageCallback(EBoPopupButton, void *);
	void LeaveOnlineMessageCallback(EBoPopupButton, void *);
	void LeavePartyMessageCallback(EBoPopupButton, void *);
	void LeavePartyPrompt();
	void NoRecordsMessageCallback(EBoPopupButton, void *);
	void NoRecordTablesMessageCallback(EBoPopupButton, void *);
	void OnConstructState();
	void OnEnterState(unsigned long);
	void OnLeaveState();
	void OnReturnFromGame(bool);
	void OnUpdateDefault();
	void OnUpdateGettingRecords();
	void OnUpdateMatchmaking();
	void OnUpdatePostRaceManager();
	void OnUpdateWaitingForLaunch();
	void OnUpdateWaitLobbyIdle();
	void PlayerListChanged();
	void QuickJoin();
	void Search();
	void SelectedOption(ECustomGameButton);
	void SetGameNameString();
	void SetMatchMakingProgress(EMatchMakingProgress);
	void SetupEventStrings();
	void ShowInGameScreen();
	void ShowMainScreen(bool);
	void ShowNumOnlineBuddies();
	RwInt32 SortGames(const void *, const void *);
	void StartGame();
	void TakePartyPromptMessageCallback(EBoPopupButton, void *);
	bool TracksMessageCallback(void *, int, void *);
	void TracksSelected(int *);
	void UpdateEventStrings();
	void UpdateGameOptions(const CB4GameOptions *);
	void UserSetCreateCallback(bool, void *);
	void UserSetIdleCallback(bool, void *);
	void UserSetLeaveCallback(bool, void *);
};